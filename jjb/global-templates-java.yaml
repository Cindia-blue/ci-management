---
- job-template:
    # Job template for Java verify jobs
    #
    # The purpose of this job template is to run "maven clean install" for projects using this
    # template.
    #
    # Required Variables:
    #     branch:    git branch (eg. stable/lithium or master)

    name: '{project}-verify-java'

    project-type: freestyle
    concurrent: true
    node: '{build-node}'

    properties:
      - build-discarder:
          days-to-keep: '{build-days-to-keep}'
          num-to-keep: '{build-num-to-keep}'
          artifact-days-to-keep: '{build-artifact-days-to-keep}'
          artifact-num-to-keep: '{build-artifact-num-to-keep}'

    parameters:
      - openo-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          refspec: 'refs/heads/{branch}'

    scm:
      - gerrit-trigger-scm:
          refspec: '$GERRIT_REFSPEC'
          choosing-strategy: 'gerrit'

    wrappers:
      - openo-infra-wrappers:
          build-timeout: '{build-timeout}'

    triggers:
      - gerrit-trigger-patch-submitted:
          name: '{project}'
          branch: '{branch}'

    builders:
      - provide-maven-settings:
          global-settings-file: 'global-settings'
          settings-file: '{mvn-settings}'
      - maven-target:
          maven-version: '{mvn33}'
          goals: 'clean install'
          settings: '{mvn-settings}'
          settings-type: cfp
          global-settings: 'global-settings'
          global-settings-type: cfp

- job-template:
    # Job template for Java verify jobs with POM not at the root
    #
    # The purpose of this job template is to run "maven clean install" for projects using this
    # template.
    #
    # Required Variables:
    #     branch:    git branch (eg. stable/lithium or master)
    #     path:      directory containing the project's pom.xml relative to
    #                the workspace.

    name: '{project}-{subproject}-verify-java'

    project-type: freestyle
    concurrent: true
    node: '{build-node}'

    properties:
      - build-discarder:
          days-to-keep: '{build-days-to-keep}'
          num-to-keep: '{build-num-to-keep}'
          artifact-days-to-keep: '{build-artifact-days-to-keep}'
          artifact-num-to-keep: '{build-artifact-num-to-keep}'

    parameters:
      - openo-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          refspec: 'refs/heads/{branch}'

    scm:
      - gerrit-trigger-scm:
          refspec: '$GERRIT_REFSPEC'
          choosing-strategy: 'gerrit'

    wrappers:
      - openo-infra-wrappers:
          build-timeout: '{build-timeout}'

    triggers:
      - gerrit-trigger-patch-submitted-pattern:
          name: '{project}'
          branch: '{branch}'
          pattern: '{path}/**'

    builders:
      - provide-maven-settings:
          global-settings-file: 'global-settings'
          settings-file: '{mvn-settings}'
      - maven-target:
          maven-version: '{mvn33}'
          pom: '{path}/pom.xml'
          goals: 'clean install'
          settings: '{mvn-settings}'
          settings-type: cfp
          global-settings: 'global-settings'
          global-settings-type: cfp

- job-template:
    # Job template for Java merge jobs
    #
    # The purpose of this job template is to run "maven clean install deploy" for projects using this
    # template.
    #
    # Required Variables:
    #     branch:    git branch (eg. stable/lithium or master)
    name: '{project}-merge-java'

    project-type: freestyle
    node: '{build-node}'

    properties:
      - build-discarder:
          days-to-keep: '{build-days-to-keep}'
          num-to-keep: '{build-num-to-keep}'
          artifact-days-to-keep: '{build-artifact-days-to-keep}'
          artifact-num-to-keep: '{build-artifact-num-to-keep}'

    parameters:
      - openo-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          refspec: 'refs/heads/{branch}'

    scm:
      - gerrit-trigger-scm:
          refspec: ''
          choosing-strategy: 'default'

    wrappers:
      - openo-infra-wrappers:
          build-timeout: '{build-timeout}'

    triggers:
      - gerrit-trigger-patch-merged:
          name: '{project}'
          branch: '{branch}'

    builders:
      - provide-maven-settings:
          global-settings-file: 'global-settings'
          settings-file: '{mvn-settings}'
      - maven-target:
          maven-version: '{mvn33}'
          goals: 'clean install deploy'
          settings: '{mvn-settings}'
          settings-type: cfp
          global-settings: 'global-settings'
          global-settings-type: cfp

- job-template:
    # Job template for Java merge jobs with POM not at the root
    #
    # The purpose of this job template is to run "maven clean install deploy" for projects using this
    # template.
    #
    # Required Variables:
    #     branch:    git branch (eg. stable/lithium or master)
    #     path:      directory containing the project's pom.xml relative to
    #                the workspace.

    name: '{project}-{subproject}-merge-java'

    project-type: freestyle
    node: '{build-node}'

    properties:
      - build-discarder:
          days-to-keep: '{build-days-to-keep}'
          num-to-keep: '{build-num-to-keep}'
          artifact-days-to-keep: '{build-artifact-days-to-keep}'
          artifact-num-to-keep: '{build-artifact-num-to-keep}'

    parameters:
      - openo-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          refspec: 'refs/heads/{branch}'

    scm:
      - gerrit-trigger-scm:
          refspec: ''
          choosing-strategy: 'default'

    wrappers:
      - openo-infra-wrappers:
          build-timeout: '{build-timeout}'

    triggers:
      - gerrit-trigger-patch-merged-pattern:
          name: '{project}'
          branch: '{branch}'
          pattern: '{path}/**'

    builders:
      - provide-maven-settings:
          global-settings-file: 'global-settings'
          settings-file: '{mvn-settings}'
      - maven-target:
          maven-version: '{mvn33}'
          pom: '{path}/pom.xml'
          goals: 'clean install deploy'
          settings: '{mvn-settings}'
          settings-type: cfp
          global-settings: 'global-settings'
          global-settings-type: cfp
